# Version: 0.0.2

FROM ubuntu:14.04.3

# update ubuntu and install necessary packages
RUN apt-get update && \
	apt-get autoremove && \
	apt-get autoclean && \
	mkdir -p /var/kalan/sw/pip

COPY kalan-core-apt-get.fil /var/kalan/sw/kalan-core-apt-get.fil

RUN apt-get -y install $(cat /var/kalan/sw/kalan-core-apt-get.fil)

RUN pip install setuptools --no-use-wheel --upgrade && \
  pip install pip --no-use-wheel --upgrade && \
	PIPPATH=`which pip`

COPY python-req-apt-get.txt /var/kalan/sw/python-req-apt-get.txt

RUN pip install --download /var/kalan/sw/pip -r /var/kalan/sw/python-req-apt-get.txt && \
   pip install -r /var/kalan/sw/python-req-apt-get.txt --no-index --find-links file:///var/kalan/sw/pip


# copy Supervisor config file from repo
COPY supervisor-app.conf /etc/supervisor/conf.d/



RUN useradd -s /usr/sbin/nologin -r -M -d /dev/null kcontainer


EXPOSE 8888 8443
WORKDIR /var/kalan-container/web2py

COPY kalan-container /var/kalan-container
RUN cp -rf /var/kalan-container/web2py/applications /var/kalan-container/web2py/applications-backup
RUN mkdir -p /var/kalan-container/ssl 

RUN cd /var/kalan-container/ssl && openssl genrsa -des3 -passout pass:x -out /var/kalan-container/ssl/certif.pass.key 2048 && \
openssl rsa -passin pass:x -in /var/kalan-container/ssl/certif.pass.key -out /var/kalan-container/ssl/self_signed.key && \
rm /var/kalan-container/ssl/certif.pass.key 

RUN openssl req -new -key /var/kalan-container/ssl/self_signed.key -out /var/kalan-container/ssl/self_signed.csr -subj "/C=MX/ST=Mexico/L=DF/O=seguraxes/OU=dlintec/CN=localhost.localdomain" && \
openssl x509 -req -days 1000 -in /var/kalan-container/ssl/self_signed.csr -signkey /var/kalan-container/ssl/self_signed.key -out /var/kalan-container/ssl/self_signed.cert 
COPY ./docker-entrypoint.sh /var/kalan-container/
RUN chmod -R 550 /var/kalan-container/ssl && \
chmod -R 775 /var/kalan-container/docker-entrypoint.sh && \
chgrp -R 999 /var/kalan-container/ssl && \
chown -R kcontainer:kcontainer /var/kalan-container

ENTRYPOINT ["/var/kalan-container/docker-entrypoint.sh", "init"]
